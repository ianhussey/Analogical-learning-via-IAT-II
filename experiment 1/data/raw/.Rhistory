position = position_dodge(width = .5)) +
apatheme +
ylab("Rating")
ggplot(data = ratings_summary_data,
aes(x = IAT_condition, y = mean_rating, fill = IAT_condition)) +
geom_violin(data = ratings_data,
aes(x = IAT_condition, y = rating, fill = IAT_condition),
alpha = 0.5,
position = position_dodge(width = .5)) +
geom_crossbar(aes(ymax = mean_rating + (1.96*se_rating),
ymin = mean_rating + (-1.96*se_rating)),
alpha = 0.5,
fatten = 0) +
geom_point(size = 4,
shape = 15,
position = position_dodge(width = .5)) +
apatheme +
ylab("Rating") +
#ylim(250,1250) +
coord_flip()
# Check that variables that should be factors are indeed factors
sapply(SCIAT_data_outliers_removed, class)
# LME analysis
model_1 <- afex::mixed(rt ~ block * IAT_condition + modern_racism_scale_total + (1 | participant),
contrasts = TRUE,
data = SCIAT_data_outliers_removed,
type = 3,
method = "KR",
progress = TRUE,
return = "mixed")
print(model_1)
# Check that variables that should be factors are indeed factors
sapply(SCIAT_data_outliers_removed, class)
# LME analysis
model_1 <- afex::mixed(rating ~ IAT_condition + modern_racism_scale_total + (1 | participant),
contrasts = TRUE,
data = SCIAT_data_outliers_removed,
type = 3,
method = "KR",
progress = TRUE,
return = "mixed")
# Check that variables that should be factors are indeed factors
sapply(ratings_data, class)
# LME analysis
model_1 <- afex::mixed(rating ~ IAT_condition + modern_racism_scale_total + (1 | participant),
contrasts = TRUE,
data = ratings_data,
type = 3,
method = "KR",
progress = TRUE,
return = "mixed")
print(model_1)
# Check that variables that should be factors are indeed factors
sapply(ratings_data, class)
# LME analysis
model_1 <- afex::mixed(rating ~ IAT_condition + modern_racism_scale_total + (1 | participant),
contrasts = TRUE,
data = ratings_data,
type = 2,
method = "KR",
progress = TRUE,
return = "mixed")
print(model_1)
# Check that variables that should be factors are indeed factors
sapply(ratings_data, class)
# LME analysis
model_1 <- afex::mixed(rating ~ IAT_condition + modern_racism_scale_total + (1 | participant),
contrasts = TRUE,
data = ratings_data,
type = 3,
method = "KR",
progress = TRUE,
return = "mixed")
print(model_1)
# Check that variables that should be factors are indeed factors
sapply(ratings_data, class)
# LME analysis
model_1 <- afex::mixed(rating ~ IAT_condition + modern_racism_scale_total + (1 | participant),
contrasts = TRUE,
data = ratings_data,
type = 2,
method = "KR",
progress = TRUE,
return = "mixed")
print(model_1)
# Check that variables that should be factors are indeed factors
sapply(ratings_data, class)
# LME analysis
model_1 <- afex::mixed(rating ~ IAT_condition + modern_racism_scale_total + (1 | participant),
contrasts = TRUE,
data = ratings_data,
type = 2,
method = "KR",
progress = TRUE,
return = "mixed")
#print(model_1)
anova(model_1)
# Check that variables that should be factors are indeed factors
sapply(ratings_data, class)
# LME analysis
model_1 <- afex::mixed(rating ~ IAT_condition + modern_racism_scale_total + (1 | participant),
contrasts = TRUE,
data = ratings_data,
type = 2,
method = "KR",
progress = TRUE,
return = "mixed")
#print(model_1)
Anova(model_1)
# Check that variables that should be factors are indeed factors
sapply(ratings_data, class)
# LME analysis
model_1 <- afex::mixed(rating ~ IAT_condition + modern_racism_scale_total + (1 | participant),
contrasts = TRUE,
data = ratings_data,
type = 3,
method = "KR",
progress = TRUE,
return = "mixed")
print(model_1)
# dependencies
library(tidyverse)
library(psych)
library(afex)
library(effsize)
library(weights)  # for rd(), a round() alternative
library(plotrix)  # for std.error
setwd(params$location_of_data)
data_df <-
read.csv("processed data/wide all tasks data.csv") %>%
mutate(gender = as.factor(gender))
colnames(data_df)
data_df %>% count(gender)
# Check that variables that should be factors are indeed factors
sapply(ratings_data, class)
# LME analysis
model_1 <- afex::mixed(rating ~ IAT_condition + modern_racism_scale_total + (1 | participant),
contrasts = TRUE,
data = ratings_data,
type = 3,
method = "KR",
progress = TRUE,
return = "mixed")
print(model_1)
# dependencies
library(tidyverse)
library(psych)
library(afex)
library(effsize)
library(weights)  # for rd(), a round() alternative
library(plotrix)  # for std.error
setwd(params$location_of_data)
data_df <-
read.csv("processed data/wide all tasks data.csv") %>%
mutate(gender = as.factor(gender))
colnames(data_df)
data_df %>% count(gender)
data_df %>% dplyr::count(gender)
setwd(params$location_of_data)
data_df <-
read.csv("processed data/wide all tasks data.csv") %>%
mutate(gender = as.factor(gender))
colnames(data_df)
data_df %>% dplyr::count(gender)
data_df %>%
dplyr::select(age) %>%
psych::describe(fast = TRUE,  # subset of descriptive stats
ranges = FALSE,
trim = 0) %>%
dplyr::select(-vars, -se)
# dependencies
library(tidyverse)
library(psych)
library(afex)
library(effsize)
library(weights)  # for rd(), a round() alternative
library(plotrix)  # for std.error
setwd(params$location_of_data)
data_df <-
read.csv("processed data/wide all tasks data.csv") %>%
mutate(gender = as.factor(gender))
colnames(data_df)
data_df %>% dplyr::count(gender)
data_df %>%
dplyr::select(age) %>%
psych::describe(fast = TRUE,  # subset of descriptive stats
ranges = FALSE,
trim = 0) %>%
dplyr::select(-vars, -se)
passers_df <-
data_df %>%
filter(IAT_exclude_based_on_fast_trials == FALSE & SCIAT_exclude_based_on_fast_trials == FALSE)
passers_df %>% count(IAT_condition)
ggplot(data = SCIAT_summary_data,
aes(x = IAT_condition, y = mean_rt, fill = block)) +
geom_violin(data = SCIAT_data_outliers_removed,
aes(x = IAT_condition, y = rt, fill = block),
alpha = 0.5,
position = position_dodge(width = .5)) +
# geom_point(data = SCIAT_data_outliers_removed,
#            aes(x = IAT_condition, y = rt, fill = block),
#            size = 1,
#            shape = 16,
#            alpha = 0.1,
#            position = position_jitterdodge(dodge.width = .5)) +
geom_crossbar(aes(ymax = mean_rt + (1.96*se_rt),
ymin = mean_rt + (-1.96*se_rt)),
alpha = 0.5,
fatten = 0) +
geom_point(size = 4,
shape = 15,
position = position_dodge(width = .5)) +
apatheme +
ylab("RT") +
ylim(250,1250) +
coord_flip()
passers_df <-
data_df %>%
filter(IAT_exclude_based_on_fast_trials == FALSE & SCIAT_exclude_based_on_fast_trials == FALSE)
passers_df %>% dplyr::count(IAT_condition)
passers_df %>%
dplyr::select(IAT_mean_RT,
IAT_perc_acc,
SCIAT_mean_RT,
SCIAT_perc_acc) %>%
psych::describe(fast = TRUE,  # subset of descriptive stats
ranges = FALSE,
trim = 0) %>%
dplyr::select(-vars, -se)
# get data
setwd(params$location_of_data)
# exclude participants who had more than 10% of trials in less than 300ms, and make variables factors
SCIAT_data <-
read.csv("processed data/long SCIAT data.csv") %>%
mutate(participant = as.factor(participant),
block = ifelse(block == "compatible", "black-positive",
ifelse(block = "incompatible", "black-negative", NA)),
block = as.factor(block),
IAT_condition = as.factor(IAT_condition)) %>%
filter(IAT_exclude_based_on_fast_trials == FALSE & SCIAT_exclude_based_on_fast_trials == FALSE)
# get data
setwd(params$location_of_data)
# exclude participants who had more than 10% of trials in less than 300ms, and make variables factors
SCIAT_data <-
read.csv("processed data/long SCIAT data.csv") %>%
mutate(participant = as.factor(participant),
block = ifelse(block == "compatible", "black-positive",
ifelse(block == "incompatible", "black-negative", NA)),
block = as.factor(block),
IAT_condition = as.factor(IAT_condition)) %>%
filter(IAT_exclude_based_on_fast_trials == FALSE & SCIAT_exclude_based_on_fast_trials == FALSE)
# exclude outliers
SCIAT_data_outliers_removed <-
SCIAT_data %>%
schoRsch::outlier(dv = "rt",  # exclude individual RTs that are greater than 2.5 SD from the mean
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
SCIAT_summary_data <-
SCIAT_data_outliers_removed %>%
group_by(IAT_condition, block) %>%
dplyr::summarize(mean_rt = round(mean(rt), 0),
sd_rt = round(sd(rt), 0),
se_rt = round(std.error(rt), 2))
SCIAT_summary_data
View(SCIAT_data)
View(SCIAT_data)
# dependencies
library(tidyverse)
library(psych)
library(afex)
library(effsize)
library(weights)  # for rd(), a round() alternative
library(plotrix)  # for std.error
setwd(params$location_of_data)
data_df <-
read.csv("processed data/wide all tasks data.csv") %>%
mutate(gender = as.factor(gender))
colnames(data_df)
data_df %>% dplyr::count(gender)
data_df %>%
dplyr::select(age) %>%
psych::describe(fast = TRUE,  # subset of descriptive stats
ranges = FALSE,
trim = 0) %>%
dplyr::select(-vars, -se)
passers_df <-
data_df %>%
filter(IAT_exclude_based_on_fast_trials == FALSE & SCIAT_exclude_based_on_fast_trials == FALSE)
passers_df %>% dplyr::count(IAT_condition)
passers_df %>%
dplyr::select(IAT_mean_RT,
IAT_perc_acc,
SCIAT_mean_RT,
SCIAT_perc_acc) %>%
psych::describe(fast = TRUE,  # subset of descriptive stats
ranges = FALSE,
trim = 0) %>%
dplyr::select(-vars, -se)
SCIAT_data <-
read.csv("processed data/long SCIAT data.csv") %>%
mutate(participant = as.factor(participant),
block = as.factor(block),
IAT_condition = as.factor(IAT_condition)) %>%
filter(IAT_exclude_based_on_fast_trials == FALSE & SCIAT_exclude_based_on_fast_trials == FALSE)
# get data
setwd(params$location_of_data)
# exclude participants who had more than 10% of trials in less than 300ms, and make variables factors
SCIAT_data <-
read.csv("processed data/long SCIAT data.csv") %>%
mutate(participant = as.factor(participant),
block = as.factor(block),
IAT_condition = as.factor(IAT_condition)) %>%
filter(IAT_exclude_based_on_fast_trials == FALSE & SCIAT_exclude_based_on_fast_trials == FALSE)
# exclude outliers
SCIAT_data_outliers_removed <-
SCIAT_data %>%
schoRsch::outlier(dv = "rt",  # exclude individual RTs that are greater than 2.5 SD from the mean
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
View(SCIAT_data)
View(SCIAT_data)
# get data
setwd(params$location_of_data)
# exclude participants who had more than 10% of trials in less than 300ms, and make variables factors
SCIAT_data <-
read.csv("processed data/long SCIAT data.csv") %>%
mutate(participant = as.factor(participant),
block = ifelse(block == "compatible", "black-positive",
ifelse(block == "incompatible", "black-negative", NA)),
block = as.factor(block),
IAT_condition = as.factor(IAT_condition)) %>%
filter(IAT_exclude_based_on_fast_trials == FALSE & SCIAT_exclude_based_on_fast_trials == FALSE)
# exclude outliers
SCIAT_data_outliers_removed <-
SCIAT_data %>%
schoRsch::outlier(dv = "rt",  # exclude individual RTs that are greater than 2.5 SD from the mean
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
SCIAT_data <-
read.csv("processed data/long SCIAT data.csv") %>%
mutate(participant = as.factor(participant),
block = as.factor(block),
IAT_condition = as.factor(IAT_condition)) %>%
filter(IAT_exclude_based_on_fast_trials == FALSE & SCIAT_exclude_based_on_fast_trials == FALSE)
# get data
setwd(params$location_of_data)
# exclude participants who had more than 10% of trials in less than 300ms, and make variables factors
SCIAT_data <-
read.csv("processed data/long SCIAT data.csv") %>%
mutate(participant = as.factor(participant),
block = as.factor(block),
IAT_condition = as.factor(IAT_condition)) %>%
filter(IAT_exclude_based_on_fast_trials == FALSE & SCIAT_exclude_based_on_fast_trials == FALSE)
# exclude outliers
SCIAT_data_outliers_removed <-
SCIAT_data %>%
schoRsch::outlier(dv = "rt",  # exclude individual RTs that are greater than 2.5 SD from the mean
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
# get data
setwd(params$location_of_data)
# exclude participants who had more than 10% of trials in less than 300ms, and make variables factors
SCIAT_data <-
read.csv("processed data/long SCIAT data.csv") %>%
mutate(participant = as.factor(participant),
block = ifelse(block == "compatible", "black-positive",
ifelse(block == "incompatible", "black-negative", NA)),
block = as.factor(block),
IAT_condition = as.factor(IAT_condition)) %>%
filter(IAT_exclude_based_on_fast_trials == FALSE & SCIAT_exclude_based_on_fast_trials == FALSE)
# exclude outliers
SCIAT_data_outliers_removed <-
SCIAT_data %>%
schoRsch::outlier(dv = "rt",  # exclude individual RTs that are greater than 2.5 SD from the mean
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
# get data
setwd(params$location_of_data)
# exclude participants who had more than 10% of trials in less than 300ms, and make variables factors
SCIAT_data <-
read.csv("processed data/long SCIAT data.csv") %>%
mutate(participant = as.factor(participant),
block = as.factor(block),
IAT_condition = as.factor(IAT_condition)) %>%
filter(IAT_exclude_based_on_fast_trials == FALSE & SCIAT_exclude_based_on_fast_trials == FALSE)
# exclude outliers
SCIAT_data_outliers_removed <-
SCIAT_data %>%
schoRsch::outlier(dv = "rt",  # exclude individual RTs that are greater than 2.5 SD from the mean
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
x <-
SCIAT_data %>%
mutate(block = ifelse(block == "compatible", "black-positive",
ifelse(block == "incompatible", "black-negative", NA)))
View(x)
View(x)
# get data
setwd(params$location_of_data)
# exclude participants who had more than 10% of trials in less than 300ms, and make variables factors
SCIAT_data <-
read.csv("processed data/long SCIAT data.csv") %>%
mutate(participant = as.factor(participant),
block = ifelse(block == "compatible", "black-positive",
ifelse(block == "incompatible", "black-negative", NA)),
#block = as.factor(block),
IAT_condition = as.factor(IAT_condition)) %>%
filter(IAT_exclude_based_on_fast_trials == FALSE & SCIAT_exclude_based_on_fast_trials == FALSE)
# exclude outliers
SCIAT_data_outliers_removed <-
SCIAT_data %>%
schoRsch::outlier(dv = "rt",  # exclude individual RTs that are greater than 2.5 SD from the mean
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
# get data
setwd(params$location_of_data)
# exclude participants who had more than 10% of trials in less than 300ms, and make variables factors
SCIAT_data <-
read.csv("processed data/long SCIAT data.csv") %>%
mutate(participant = as.factor(participant),
block = as.factor(ifelse(block == "compatible", "black-positive",
ifelse(block == "incompatible", "black-negative", NA))),
#block = as.factor(block),
IAT_condition = as.factor(IAT_condition)) %>%
filter(IAT_exclude_based_on_fast_trials == FALSE & SCIAT_exclude_based_on_fast_trials == FALSE)
# exclude outliers
SCIAT_data_outliers_removed <-
SCIAT_data %>%
schoRsch::outlier(dv = "rt",  # exclude individual RTs that are greater than 2.5 SD from the mean
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
# get data
setwd(params$location_of_data)
# exclude participants who had more than 10% of trials in less than 300ms, and make variables factors
SCIAT_data <-
read.csv("processed data/long SCIAT data.csv") %>%
mutate(participant = as.factor(participant),
block = as.factor(ifelse(block == "compatible", "black-positive",
ifelse(block == "incompatible", "black-negative", NA))),
IAT_condition = as.factor(IAT_condition)) %>%
filter(IAT_exclude_based_on_fast_trials == FALSE & SCIAT_exclude_based_on_fast_trials == FALSE)
# exclude outliers
SCIAT_data_outliers_removed <-
SCIAT_data %>%
schoRsch::outlier(dv = "rt",  # exclude individual RTs that are greater than 2.5 SD from the mean
todo="elim",
upper.z = 2.5,
lower.z = -2.5)
SCIAT_summary_data <-
SCIAT_data_outliers_removed %>%
group_by(IAT_condition, block) %>%
dplyr::summarize(mean_rt = round(mean(rt), 0),
sd_rt = round(sd(rt), 0),
se_rt = round(std.error(rt), 2))
SCIAT_summary_data
# apa theme for all plots
apatheme <-
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
#text = element_text(family='Arial'),  # doesn't play nice with knittr
legend.title = element_blank(),
legend.position = c(.9,.9),
axis.line.x = element_line(color='black'),
axis.line.y = element_line(color='black'))
# add a combined condition*IAT block variable for plotting
SCIAT_data_outliers_removed <-
SCIAT_data_outliers_removed %>%
mutate(exp_factor = paste(IAT_condition, block, sep = "_"))
ggplot(data = SCIAT_data_outliers_removed, aes(rt, fill = "trimmed")) +
geom_density(alpha=0.50) +
geom_density(data = SCIAT_data,
aes(rt, fill = "all"),
alpha=0.50) +
apatheme
ggplot(SCIAT_data_outliers_removed,
aes(rt, colour = exp_factor, fill = exp_factor)) +
geom_density(alpha=0.50) +
apatheme
ggplot(data = SCIAT_summary_data,
aes(x = IAT_condition, y = mean_rt, fill = block)) +
geom_violin(data = SCIAT_data_outliers_removed,
aes(x = IAT_condition, y = rt, fill = block),
alpha = 0.5,
position = position_dodge(width = .5)) +
# geom_point(data = SCIAT_data_outliers_removed,
#            aes(x = IAT_condition, y = rt, fill = block),
#            size = 1,
#            shape = 16,
#            alpha = 0.1,
#            position = position_jitterdodge(dodge.width = .5)) +
geom_crossbar(aes(ymax = mean_rt + (1.96*se_rt),
ymin = mean_rt + (-1.96*se_rt)),
alpha = 0.5,
fatten = 0) +
geom_point(size = 4,
shape = 15,
position = position_dodge(width = .5)) +
apatheme +
ylab("RT") +
ylim(250,1250) +
coord_flip()
