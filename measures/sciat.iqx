****************************************************
Single Category Picture Implicit Attitude Test (SC-IAT)
****************************************************
Copyright ©  04-01-2015 Millisecond Software
modified by Ian Hussey

<values>
/showsummaryfeedback = false
/pretrialpause = 250
/ showreminder = false
/ reminderRT = 2000
/ reminderduration = 500
</values>

****************************************************
stimuli
****************************************************
<item attributeAlabel>
/1 = "Positive"
</item>

<item attributeA>
/1 = "Joy"
/2 = "Happy"
/3 = "Laughter"
/4 = "Love"
/5 = "Glorious"
/6 = "Pleasure"
/7 = "Peace"
/8 = "Wonderful"
</item>

<item attributeBlabel>
/1 = "Negative"
</item>

<item attributeB>
/1 = "Evil"
/2 = "Agony"
/3 = "Awful"
/4 = "Nasty"
/5 = "Terrible"
/6 = "Horrible"
/7 = "Failure"
/8 = "Hurt"
</item>

<item targetAlabel>
/1 = "Black people"
</item>

<item targetA>
/1 = "bf14_nc.jpg"
/2 = "bf23_nc.jpg"
/3 = "bf56_nc.jpg"
/4 = "bm14_nc.jpg"
/5 = "bm23_nc.jpg"
/6 = "bm56_nc.jpg"
</item>

****************************************************
defaults
****************************************************

<defaults>
/ fontstyle = ("Arial", 3.5%)
/ screencolor = (0,0,0)
/ txbgcolor = (0,0,0)
/ txcolor = (255, 255, 255)
/ minimumversion = "4.0.0.0"
</defaults>

****************************************************
scoring
****************************************************

<values>
/completed = 0
/correct = 0
/ sum1 = 0
/ sum2 = 0
/ n1 = 0
/ n2 = 0
/ ss1 = 0
/ ss2 = 0
/ magnitude = "unknown"
/ n_correct = 0

/key_left = 18
/key_left_label = "E"
/key_right = 23
/key_right_label = "I"
</values>

<expressions>
/ m1 = values.sum1 / values.n1
/ m2 = values.sum2 / values.n2
/ sd1 = sqrt((values.ss1 - (values.n1 * (expressions.m1 * expressions.m1))) / (values.n1 - 1))
/ sd2 = sqrt((values.ss2 - (values.n2 * (expressions.m2 * expressions.m2))) / (values.n2 - 1))
/ sd = sqrt((((values.n1 - 1) * (expressions.sd1 * expressions.sd1) + (values.n2 - 1) * (expressions.sd2 * expressions.sd2)) + ((values.n1 + values.n2) * ((expressions.m1 - expressions.m2) * (expressions.m1 - expressions.m2)) / 4) ) / (values.n1 + values.n2 - 1) )
/ d = (m2 - m1) / expressions.sd
/ latdiff = m2 - m1
/ attitude = "unknown"
/ percentcorrect = (values.n_correct/ (block.compatibletest.trialcount + block.incompatibletest.trialcount)) * 100
</expressions>

<data>
/file = "SCIAT_rawdata.iqdat"
/separatefiles = true
/ columns = [date, time, group, subject, blockcode, blocknum, trialcode, trialnum, 
			response, correct, latency, stimulusnumber, stimulusitem,
			expressions.d, expressions.latdiff, expressions.percentcorrect]
</data>

<summarydata >
/file = "SCIAT_summary.iqdat"
/columns = [script.startdate, script.starttime, script.subjectid, script.groupid, script.elapsedtime, values.completed, 
			expressions.m1, expressions.sd1, expressions.m2, expressions.sd2,
			expressions.d, expressions.latdiff, expressions.percentcorrect]
</summarydata>

<trial summary>
/ stimulustimes = [0=summary]
/ validresponse = (" ")
/ recorddata = false
/ ontrialbegin = [values.magnitude = "little to no"]
/ ontrialbegin = [if( abs(expressions.d) > 0.15 ) values.magnitude = "a slight"]
/ ontrialbegin = [if( abs(expressions.d) > 0.35 ) values.magnitude = "a moderate"]
/ ontrialbegin = [if( abs(expressions.d) >= 0.65 ) values.magnitude = "a strong"]
/ ontrialbegin = [if(expressions.d >= 0.0) expressions.attitude = "positive"]
/ ontrialbegin = [if(expressions.d < 0.0) expressions.attitude = "negative"]
</trial>

<text summary>
/ items = ("Your IAT score (D) was <% expressions.d %>, which suggests <% values.magnitude %> <% expressions.attitude %> implicit attitude towards <% item.targetALabel.1 %>.~n~n~nPress the spacebar to complete this session.") 
/ size = (60%, 60%)
/ hjustify = left
 </text>

****************************************************
instructions
****************************************************

<trial instructions>
/ stimulustimes = [1=instructions, spacebar]
/ correctresponse = (" ")
/ errormessage = false
/ recorddata = false
</trial>

<text instructions>
/ items = instructions
/ hjustify = left
/ size = (90%, 60%)
/ position = (50%, 85%)
/ valign = bottom
/ select = sequence
/ resetinterval = 20
</text>

<item instructions>
/ 1 = "
Put your middle or index fingers on the E and I keys. 

Pictures and words representing the categories at the top will appear in the middle of the screen. 
Categorize them using the E key for categories on the left and I key for categories on the right. 
If you make an error, an X will appear - hit the correct key to continue.

This is a timed sorting task. GO AS FAST AS YOU CAN while making as few mistakes as possible. 

This task will take about 5 minutes to complete."
/ 2 = "
Notice above, there are now three cateogries to be categorized."
/ 3 = "
See above, one of the three categories has changed sides. Sort the categories using the new configuration."
</item>

<text spacebar>
/ items = ("Press the SPACE BAR to begin.")
/ position = (50%, 95%)
/ valign = bottom
</text>

<text attributeA>
/ items = attributeA
/ fontstyle = ("Arial", 5%)
/ txcolor = purple
</text>

<text attributeB>
/ items = attributeB
/ fontstyle = ("Arial", 5%)
/ txcolor = purple
</text>

<picture targetA>
/ items = targetA
/ size = (20%, 20%)
</picture>

<text error>
/ position = (50%, 75%)
/ items = ("X")
/ color = (255, 0, 0)
/ fontstyle = ("Arial", 10%, true)
</text>

<text attributeAleft>
/ items = attributeAlabel
/ valign = top
/ halign = left
/ position = (5%, 5%)
/ txcolor = purple
/ fontstyle = ("Arial", 5%)
</text>

<text attributeBright>
/ items = attributeBlabel
/ valign = top
/ halign = right
/ position = (95%, 5%)
/ txcolor = purple
/ fontstyle = ("Arial", 5%)
</text>

<text targetAleftmixed>
/ items = targetAlabel
/ valign = top
/ halign = left
/ position = (5%, 19%)
/ fontstyle = ("Arial", 5%)
</text>

<text targetArightmixed>
/ items = targetAlabel
/ valign = top
/ halign = right
/ position = (95%, 19%)
/ fontstyle = ("Arial", 5%)
</text>

<text targetAleft>
/ items = targetAlabel
/ valign = top
/ halign = left
/ position = (5%, 5%)
/ fontstyle = ("Arial", 5%)
</text>

<text targetAright>
/ items = targetAlabel
/ valign = top
/ halign = right
/ position = (95%, 5%)
/ fontstyle = ("Arial", 5%)
</text>

<text orleft>
/ items = ("or")
/ valign = top
/ halign = left
/ position = (5%, 12%)
/ fontstyle = ("Arial", 5%)
</text>

<text orright>
/ items = ("or")
/ valign = top
/ halign = right
/ position = (95%, 12%)
/ fontstyle = ("Arial", 5%)
</text>

<text reminder>
/items = ("Please, respond more quickly!")
/txcolor = yellow
/ fontstyle = ("Arial", 5%, false, false, false, false, 5, 1)
</text>

****************************************************
trials
****************************************************

<trial attributeA>
/pretrialpause = values.pretrialpause
/stimulusframes = [1 = attributeA]
/validresponse = (18, 23)
/correctresponse = (18)
/responsemessage = (23,error,150)

/ontrialend = [if (trial.attributea.correct) values.correct = 1 else values.correct = 0]
/branch = [if (values.showreminder == true && trial.attributea.latency >= values.reminderrt) trial.reminder]
</trial>

<trial attributeB>
/pretrialpause = values.pretrialpause
/stimulusframes = [1 = attributeB]
/validresponse = (18, 23)
/correctresponse = (23)
/responsemessage = (18,error,150)

/ontrialend = [if (trial.attributeb.correct) values.correct = 1 else values.correct = 0]
/branch = [if (values.showreminder == true && trial.attributeB.latency >= values.reminderrt) trial.reminder]
</trial>

<trial targetAleft>
/pretrialpause = values.pretrialpause
/stimulusframes = [1 = targetA]
/validresponse = (18, 23)
/correctresponse = (18)
/responsemessage = (23,error,150)

/ontrialend = [if (trial.targetAleft.correct) values.correct = 1 else values.correct = 0]
/branch = [if (values.showreminder == true && trial.targetAleft.latency >= values.reminderrt) trial.reminder]
</trial>

<trial targetAright>
/pretrialpause = values.pretrialpause
/stimulusframes = [1 = targetA]
/validresponse = (18, 23)
/correctresponse = (23)
/responsemessage = (18,error,150)

/ontrialend = [if (trial.targetAright.correct) values.correct = 1 else values.correct = 0]
/branch = [if (values.showreminder == true && trial.targetAright.latency >= values.reminderrt) trial.reminder]
</trial>

<trial reminder>
/stimulusframes = [1 = reminder]
/timeout = values.reminderduration
/correctresponse = (noresponse)
/recorddata = false
</trial>

****************************************************
blocks
****************************************************

<block practice_compatibletest>
/ bgstim = (attributeAleft, attributeBright)
/ trials = [1=instructions; 
			2-11 = noreplace(attributeA, attributeA, attributeA, attributeA, attributeA,
							 attributeB, attributeB, attributeB, attributeB, attributeB)]
/ responsemode = correct
</block>

Note: presents the trials in a  20:20:30 ratio => 40 (good + target) on responsekey_left and 30 (bad) on responsekey_right
<block compatibletest>
/ bgstim = (attributeAleft, orleft, targetAleftmixed, attributeBright)
/ trials = [1-70 = noreplace(targetAleft, targetAleft, targetAleft, targetAleft, targetAleft, targetAleft, targetAleft, targetAleft, targetAleft, targetAleft, 
							 attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, 
							 attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB)]
/ ontrialend = [if(block.compatibletest.latency  <= 10000) values.sum1 =  values.sum1 + block.compatibletest.latency]
/ ontrialend = [if(block.compatibletest.latency  <= 10000) values.n1 =  values.n1 + 1]
/ ontrialend = [if(block.compatibletest.latency  <= 10000) values.ss1 =  values.ss1 + (block.compatibletest.latency * block.compatibletest.latency)]
/ ontrialend = [if(block.compatibletest.latency  <= 10000) values.n_correct += block.compatibletest.correct]
/ responsemode = correct
</block>

Note: presents the trials in a  7:7:10 ratio => 10 (good) on responsekey_left and 14 (bad + target) on responsekey_right
<block practice_incompatibletest>
/ bgstim = (attributeAleft, attributeBright)
/ trials = [1=instructions; 
			2-11 = noreplace(attributeA, attributeA, attributeA, attributeA, attributeA,
							 attributeB, attributeB, attributeB, attributeB, attributeB)]
/ responsemode = correct
</block>

Note: presents the trials in a  7:7:10 ratio => 10 (good) on responsekey_left and 14 (bad + target) on responsekey_right
<block incompatibletest>
/ bgstim = (attributeAleft, targetARightMixed, orright, attributeBright)
/ trials = [1-70 = noreplace(targetAright, targetAright, targetAright, targetAright, targetAright, targetAright, targetAright, targetAright, targetAright, targetAright, 
							 attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA,   
							 attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, )]
/ ontrialend = [if(block.incompatibletest.latency  <= 10000) values.sum2 =  values.sum2 + block.incompatibletest.latency]
/ ontrialend = [if(block.incompatibletest.latency  <= 10000) values.n2 =  values.n2 + 1]
/ ontrialend = [if(block.incompatibletest.latency  <= 10000) values.ss2 =  values.ss2 + (block.incompatibletest.latency * block.incompatibletest.latency)]
/ ontrialend = [if(block.incompatibletest.latency  <= 10000) values.n_correct += block.incompatibletest.correct]
/ responsemode = correct
</block>

<block compatibletestinstructions>
/ bgstim = (attributeAleft, orleft, targetAleftmixed, attributeBright)
/ trials = [1=instructions]
/ recorddata = false
</block>

<block incompatibletestinstructions>
/ bgstim = (attributeAleft, attributeBright, orright, targetArightmixed)
/ trials = [1=instructions]
/ recorddata = false
</block>

<block summary>
/skip = [values.showsummaryfeedback == false]
/ trials = [1=summary]
/ recorddata = false
</block>

****************************************************
experiment
****************************************************

<expt>
/subjects = (1 of 2)
/groupassignment = subjectnumber
/ blocks = [1=practice_compatibletest; 2=compatibletestinstructions; 3=compatibletest;
			4=incompatibletestinstructions; 5=incompatibletest; 6=summary]
/onexptend = [values.completed = 1]
</expt>

<expt>
/subjects = (2 of 2)
/groupassignment = subjectnumber
/ blocks = [1=practice_incompatibletest; 2=incompatibletestinstructions; 3=incompatibletest; 
			4=compatibletestinstructions; 5=compatibletest; 6=summary]
/onexptend = [values.completed = 1]
</expt>

****************************************************
Test Monkey
****************************************************

<monkey>
/ latencydistribution = normal(500, 100)
/ percentcorrect = 90
</monkey>
