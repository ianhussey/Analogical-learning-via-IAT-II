**************************************************************************************************************
**************************************************************************************************************
	Single Category Picture Implicit Attitude Test (SC-IAT) - adapted by Millisecond Software
**************************************************************************************************************
**************************************************************************************************************
Last Modified:	04-01-2015 by K. Borchert (katjab@millisecond.com) for Millisecond Software

Copyright ©  04-01-2015 Millisecond Software
**************************************************************************************************************
**************************************************************************************************************
	Background Info
**************************************************************************************************************
**************************************************************************************************************
The SC-IAT script is based on:

Karpinski, A. & Steinman, R.B. (2006). The Single Category Implicit Association Test as a Measure of Implicit
Social Cognition. Journal of Personality and Social Psychology, 91, 16–32.

and the general IAT.iqx script published by Millisecond Software LLC

Differences btw. this script and Karpinski & Steinman (2006)
- error responses in this script need to be corrected before moving on
- no response window:
stimuli stay on screen until a correct response is given. A reminder to "respond more quickly" is
optional if latencies exceed a certain limit (see section "Editable Values" for more info)
- no error response correction necessary for d-score calculation as error responses needed to be corrected
before moving on (therefore an error penalty was added automatically to each error latency)


IAT-Background Info:

The Implicit Association Task (Greenwald, McGhee, & Schwartz, 1998) is a widely-used cognitive-behavioral paradigm
that measures the strength of automatic (implicit) associations between concepts in people’s minds relying 
on latency measures in a simple sorting task.
 
The strength of an association between concepts is measured by the standardized mean difference score of 
the 'hypothesis-inconsistent' pairings and 'hypothesis-consistent' pairings (d-score) (Greenwald, Nosek, & Banaji, 2003). 
In general, the higher the d-score the stronger is the association between the 'hypothesis-consistent' pairings 
(decided by researchers). Negative d-scores suggest a stronger association between the 'hypothesis-inconsistent' pairings.

Inquisit calculates d-scores using the improved scoring algorithm as described in Greenwald et al (2003). 
Error trials are handled by requiring respondents to correct their responses according to recommendation (p.214).
This differs slightly from Karpinski & Steinman (2006) who removed noresponse trials from d-score calculations and 
replaced error responses with the mean latency + 400ms penalty.

D-scores obtained with this script:
positive D-scores: positive attitude towards animals
negative D-scores: negative attitude towards animals

References:
Greenwald, A. G., McGhee, D. E., & Schwartz, J. K. L. (1998). Measuring individual differences in implicit cognition: 
The Implicit Association Test. Journal of Personality and Social Psychology, 74, 1464-1480.

Greenwald, A. G., Nosek, B. A., & Banaji, M. R. (2003). Understanding and Using the Implicit Association Test: 
I. An Improved Scoring Algorithm. Journal of Personality and Social Psychology, 85, 197-216.


												Script Specifics:

(1) EXPERIMENTAL PROCEDURE:
a) Block Practice Compatible* (24 trials); responses not counted towards D-score
b) Block Compatible (72 trials)
c) Block Practice InCompatible (24 trials); responses not counted towards D-score
d) Block InCompatible (72 trials)

*order compatible - incompatible counterbalanced by groupnumber

=> one D-score is determined 

(2) TRIALS
After a pretrialpause of 250ms (default, editable), stimuli are presented until correct response is given. 
In contrast to Karpinski & Steinman (2006), participants have to correct error responses and stimulus stays on screen until response
is corrected. If latencies exceed a certain limit, a reminder to "respond more quickly" is optional in this script (see Editable Values for more info).

(3) STIMULI:
- 21 words for Attribute Categories Good/Bad
- 7 words for target category (here: Animals)

(4) SCORING:
Inquisit calculates d-scores using the improved scoring algorithm as described in Greenwald et al (2003). 
Only trials from test blocks count towards d-score calculation in this script.
Error trials are handled by requiring respondents to correct their responses according to recommendation Greenwald et al (2003, p.214).
This differs slightly from Karpinski & Steinman (2006) who removed noresponse trials from d-score calculations and 
replaced error responses with the block mean latency + 400ms error penalty.

************************************************************************
Editable Parameters: can be easily set by each experimenter
************************************************************************
/showsummaryfeedback:					set parameter showsummaryfeedback = true to display summary feedback to participants at the end (default)
										set parameter showsummaryfeedback = false if no summary feedback should be presented to participants

/pretrialpause:							pause before stimuli presentation (default: 250ms)
/showreminder:							true = shows a reminder to respond faster if latencies exceeds a predetermined latency
														Note: Karpinsky & Steinman (2006) call using a reminder "largly window dressing" but that the response window (in this script: a pseudo response window) might create a "sense of urgency" (p.18)
										false = does not show reminder to respond more quickly (default in this script)
/reminderRT:							if response latency is larger than reminderRT, a reminder is presented to respond faster (if values.showreminder = true)
											Note: error responses have to be corrected in this script; this will add ms to their response latencies
/reminderduration:						time that the reminder to respond more quickly stays on the screen (default: 500ms)


<values>
/showsummaryfeedback = false
/pretrialpause = 250
/ showreminder = false
/ reminderRT = 2000
/ reminderduration = 500
</values>

***********************************************************************
Stimuli: Edit here
***********************************************************************
<item attributeAlabel>
/1 = "Positive"
</item>

<item attributeA>
/1 = "Joy"
/2 = "Happy"
/3 = "Laughter"
/4 = "Love"
/5 = "Glorious"
/6 = "Pleasure"
/7 = "Peace"
/8 = "Wonderful"
</item>

<item attributeBlabel>
/1 = "Negative"
</item>

<item attributeB>
/1 = "Evil"
/2 = "Agony"
/3 = "Awful"
/4 = "Nasty"
/5 = "Terrible"
/6 = "Horrible"
/7 = "Failure"
/8 = "Hurt"
</item>

<item targetAlabel>
/1 = "Black people"
</item>

<item targetA>
/1 = "bf14_nc.jpg"
/2 = "bf23_nc.jpg"
/3 = "bf56_nc.jpg"
/4 = "bm14_nc.jpg"
/5 = "bm23_nc.jpg"
/6 = "bm56_nc.jpg"
</item>

***********************************************************************
To change the categories, you need only change the stimulus items and 
labels immediately above this line. All commands below relate to the 
IAT procedure, and need only be changed if you wish to modify the 
generic IAT procedure.
***********************************************************************


***********************************************************************
Defaults
***********************************************************************

<defaults>
/ fontstyle = ("Arial", 3.5%)
/ screencolor = (0,0,0)
/ txbgcolor = (0,0,0)
/ txcolor = (255, 255, 255)
/ minimumversion = "4.0.0.0"
</defaults>

***********************************************************************
Scoring
***********************************************************************

*********************
automatically updated
*********************
/completed:					0 = script was not completed; 1 = script was completed (all conditions run)
/correct:					1 = correct response; 0 = incorrect response
/ sum1:						tracks the sum of the latencies to correct responses (and latencies <= 10000ms) for the compatible block
/ sum2a:					tracks the sum of the latencies to correct responses (and latencies <= 10000ms) for the incompatible block
/ n1:						counts the number of correct trials in compatible block
/ n2:						counts the number of correct trials in incompatible block
/ ss1:						tracks the sum of the squared latencies to correct responses (and latencies <= 10000ms) in the compatible block 
/ ss2						tracks the sum of the squared latencies to correct responses (and latencies <= 10000ms) in the incompatible block
/ magnitude:				stores the magnitude of the implicit preference: "little to no", "a slight", "a moderate", "a strong"
/ n_correct:				counts all initial correct responses of all trials that count towards D score

/key_left:								left response key scancode (default: 18 => E)
/key_left_label:						label of left response key (here: E)
/key_right:								right response key scancode (default: 23 => I)
/key_right_label:						label of right response key (here: "I")

<values>
/completed = 0
/correct = 0
/ sum1 = 0
/ sum2 = 0
/ n1 = 0
/ n2 = 0
/ ss1 = 0
/ ss2 = 0
/ magnitude = "unknown"
/ n_correct = 0

/key_left = 18
/key_left_label = "E"
/key_right = 23
/key_right_label = "I"
</values>

/ m1:					mean latencies of correct responses in compatible block
/ m2:					mean latencies of correct responses in incompatible block
/ sd1:					standard deviation of latencies of correct responses in compatible block
/ sd2:					standard deviation of latencies of correct responses in incompatible block
/ sd:					standarddeviation of latencies overall
/ d:					overall D-score
/ latdiff:				difference between mean latencies in incompatible and compatible block
/ attitude:				positive vs. negative 
/ percentcorrect:       calculates the overall percent correct score of initial responses of compatible and incompatible trials
						with specified latencies

<expressions>
/ m1 = values.sum1 / values.n1
/ m2 = values.sum2 / values.n2
/ sd1 = sqrt((values.ss1 - (values.n1 * (expressions.m1 * expressions.m1))) / (values.n1 - 1))
/ sd2 = sqrt((values.ss2 - (values.n2 * (expressions.m2 * expressions.m2))) / (values.n2 - 1))
/ sd = sqrt((((values.n1 - 1) * (expressions.sd1 * expressions.sd1) + (values.n2 - 1) * (expressions.sd2 * expressions.sd2)) + ((values.n1 + values.n2) * ((expressions.m1 - expressions.m2) * (expressions.m1 - expressions.m2)) / 4) ) / (values.n1 + values.n2 - 1) )
/ d = (m2 - m1) / expressions.sd
/ latdiff = m2 - m1
/ attitude = "unknown"
/ percentcorrect = (values.n_correct/ (block.compatibletest.trialcount + block.incompatibletest.trialcount)) * 100
</expressions>

***********************************************************************
Data Columns
***********************************************************************
date/time/group/subject:			built in variables that track date and time when script was run with the assigned
									subject- and group number

									Note: group1/group2 counterbalance the order in which the pairings are run

blockcode:							the name of the current trial
blocknum:							the number of the current trial
trialcode:							the name of the current trial
trialnum:							the number of the current trial
response:							the final trial response (scancodes of the keys pressed)
										Note: script saves the final and -by design- correct response
correct:							the accuracy of the initial response
										0 = initial response was incorrect and needed to be corrected
										1 = initial response is correct
latency:							the latency of the final (correct) response
stimulusnumber:						the number of the current stimulus
stimulusitem:						the currently presented item
expressions.d:						overall d-score
/ latdiff:							difference between mean latencies in incompatible and compatible block
/percentcorrect:       				the overall percent correct score of initial responses of compatible and incompatible trials
									with qualifying latencies

<data>
/file = "SCIAT_2_rawdata.iqdat"
/separatefiles = true
/ columns = [date, time, group, subject, blockcode, blocknum, trialcode, trialnum, 
			response, correct, latency, stimulusnumber, stimulusitem,
			expressions.d, expressions.latdiff, expressions.percentcorrect]
</data>

*******************
Summary Data File
*******************
script.startdate:					date script was run
script.starttime:					time script was started
script.subjectid:					subject id number
script.groupid:						group id number
script.elapsedtime:					time it took to run script (in ms)
/completed:							0 = script was not completed; 1 = script was completed (all conditions run)

/ m1:					mean latencies of correct responses in compatible block
/ m2:					mean latencies of correct responses in incompatible block
/ sd1:					standard deviation of latencies of correct responses in compatible block
/ sd2:					standard deviation of latencies of correct responses in incompatible block
/d:						overall d-score
/ latdiff:				difference between mean latencies in incompatible and compatible block
/percentcorrect:       	the overall percent correct score of initial responses of compatible and incompatible trials
						with qualifying latencies

<summarydata >
/file = "SCIAT_2_summary.iqdat"
/columns = [script.startdate, script.starttime, script.subjectid, script.groupid, script.elapsedtime, values.completed, 
			expressions.m1, expressions.sd1, expressions.m2, expressions.sd2,
			expressions.d, expressions.latdiff, expressions.percentcorrect]
</summarydata>


***********************************************************************
Performance summary
***********************************************************************

<trial summary>
/ stimulustimes = [0=summary]
/ validresponse = (" ")
/ recorddata = false
/ ontrialbegin = [values.magnitude = "little to no"]
/ ontrialbegin = [if( abs(expressions.d) > 0.15 ) values.magnitude = "a slight"]
/ ontrialbegin = [if( abs(expressions.d) > 0.35 ) values.magnitude = "a moderate"]
/ ontrialbegin = [if( abs(expressions.d) >= 0.65 ) values.magnitude = "a strong"]
/ ontrialbegin = [if(expressions.d >= 0.0) expressions.attitude = "positive"]
/ ontrialbegin = [if(expressions.d < 0.0) expressions.attitude = "negative"]
</trial>

<text summary>
/ items = ("Your IAT score (D) was <% expressions.d %>, which suggests <% values.magnitude %> <% expressions.attitude %> implicit attitude towards <% item.targetALabel.1 %>.~n~n~nPress the spacebar to complete this session.") 
/ size = (60%, 60%)
/ hjustify = left
 </text>

***********************************************************************
Task instruction stimuli
***********************************************************************

<trial instructions>
/ stimulustimes = [1=instructions, spacebar]
/ correctresponse = (" ")
/ errormessage = false
/ recorddata = false
</trial>

<text instructions>
/ items = instructions
/ hjustify = left
/ size = (90%, 60%)
/ position = (50%, 85%)
/ valign = bottom
/ select = sequence
/ resetinterval = 20
</text>

<item instructions>
/ 1 = "
Put your middle or index fingers on the E and I keys. 

Pictures and words representing the categories at the top will appear in the middle of the screen. 
Categorize them using the E key for categories on the left and I key for categories on the right. 
If you make an error, an X will appear - hit the correct key to continue.

This is a timed sorting task. GO AS FAST AS YOU CAN while making as few mistakes as possible. 

This task will take about 5 minutes to complete."
/ 2 = "
Notice above, there are now three cateogries to be categorized."
/ 3 = "
See above, one of the three categories has changed sides. Sort the categories using the new configuration."
</item>

<text spacebar>
/ items = ("Press the SPACE BAR to begin.")
/ position = (50%, 95%)
/ valign = bottom
</text>

<text attributeA>
/ items = attributeA
/ fontstyle = ("Arial", 5%)
/ txcolor = purple
</text>

<text attributeB>
/ items = attributeB
/ fontstyle = ("Arial", 5%)
/ txcolor = purple
</text>

<picture targetA>
/ items = targetA
/ size = (20%, 20%)
</picture>

<text error>
/ position = (50%, 75%)
/ items = ("X")
/ color = (255, 0, 0)
/ fontstyle = ("Arial", 10%, true)
</text>

<text attributeAleft>
/ items = attributeAlabel
/ valign = top
/ halign = left
/ position = (5%, 5%)
/ txcolor = purple
/ fontstyle = ("Arial", 5%)
</text>

<text attributeBright>
/ items = attributeBlabel
/ valign = top
/ halign = right
/ position = (95%, 5%)
/ txcolor = purple
/ fontstyle = ("Arial", 5%)
</text>

<text targetAleftmixed>
/ items = targetAlabel
/ valign = top
/ halign = left
/ position = (5%, 19%)
/ fontstyle = ("Arial", 5%)
</text>

<text targetArightmixed>
/ items = targetAlabel
/ valign = top
/ halign = right
/ position = (95%, 19%)
/ fontstyle = ("Arial", 5%)
</text>

<text targetAleft>
/ items = targetAlabel
/ valign = top
/ halign = left
/ position = (5%, 5%)
/ fontstyle = ("Arial", 5%)
</text>

<text targetAright>
/ items = targetAlabel
/ valign = top
/ halign = right
/ position = (95%, 5%)
/ fontstyle = ("Arial", 5%)
</text>

<text orleft>
/ items = ("or")
/ valign = top
/ halign = left
/ position = (5%, 12%)
/ fontstyle = ("Arial", 5%)
</text>

<text orright>
/ items = ("or")
/ valign = top
/ halign = right
/ position = (95%, 12%)
/ fontstyle = ("Arial", 5%)
</text>

<text reminder>
/items = ("Please, respond more quickly!")
/txcolor = yellow
/ fontstyle = ("Arial", 5%, false, false, false, false, 5, 1)
</text>

***********************************************************************
Trials
***********************************************************************

<trial attributeA>
/pretrialpause = values.pretrialpause
/stimulusframes = [1 = attributeA]
/validresponse = (18, 23)
/correctresponse = (18)
/responsemessage = (23,error,150)

/ontrialend = [if (trial.attributea.correct) values.correct = 1 else values.correct = 0]
/branch = [if (values.showreminder == true && trial.attributea.latency >= values.reminderrt) trial.reminder]
</trial>

<trial attributeB>
/pretrialpause = values.pretrialpause
/stimulusframes = [1 = attributeB]
/validresponse = (18, 23)
/correctresponse = (23)
/responsemessage = (18,error,150)

/ontrialend = [if (trial.attributeb.correct) values.correct = 1 else values.correct = 0]
/branch = [if (values.showreminder == true && trial.attributeB.latency >= values.reminderrt) trial.reminder]
</trial>

<trial targetAleft>
/pretrialpause = values.pretrialpause
/stimulusframes = [1 = targetA]
/validresponse = (18, 23)
/correctresponse = (18)
/responsemessage = (23,error,150)

/ontrialend = [if (trial.targetAleft.correct) values.correct = 1 else values.correct = 0]
/branch = [if (values.showreminder == true && trial.targetAleft.latency >= values.reminderrt) trial.reminder]
</trial>

<trial targetAright>
/pretrialpause = values.pretrialpause
/stimulusframes = [1 = targetA]
/validresponse = (18, 23)
/correctresponse = (23)
/responsemessage = (18,error,150)

/ontrialend = [if (trial.targetAright.correct) values.correct = 1 else values.correct = 0]
/branch = [if (values.showreminder == true && trial.targetAright.latency >= values.reminderrt) trial.reminder]
</trial>

<trial reminder>
/stimulusframes = [1 = reminder]
/timeout = values.reminderduration
/correctresponse = (noresponse)
/recorddata = false
</trial>

***********************************************************************
Blocks
***********************************************************************

<block practice_compatibletest>
/ bgstim = (attributeAleft, attributeBright)
/ trials = [1=instructions; 
			2-11 = noreplace(attributeA, attributeA, attributeA, attributeA, attributeA,
							 attributeB, attributeB, attributeB, attributeB, attributeB)]
/ responsemode = correct
</block>

Note: presents the trials in a  20:20:30 ratio => 40 (good + target) on responsekey_left and 30 (bad) on responsekey_right
<block compatibletest>
/ bgstim = (attributeAleft, orleft, targetAleftmixed, attributeBright)
/ trials = [1-70 = noreplace(targetAleft, targetAleft, targetAleft, targetAleft, targetAleft, targetAleft, targetAleft, targetAleft, targetAleft, targetAleft, 
							 attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, 
							 attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB)]
/ ontrialend = [if(block.compatibletest.latency  <= 10000) values.sum1 =  values.sum1 + block.compatibletest.latency]
/ ontrialend = [if(block.compatibletest.latency  <= 10000) values.n1 =  values.n1 + 1]
/ ontrialend = [if(block.compatibletest.latency  <= 10000) values.ss1 =  values.ss1 + (block.compatibletest.latency * block.compatibletest.latency)]
/ ontrialend = [if(block.compatibletest.latency  <= 10000) values.n_correct += block.compatibletest.correct]
/ responsemode = correct
</block>

Note: presents the trials in a  7:7:10 ratio => 10 (good) on responsekey_left and 14 (bad + target) on responsekey_right
<block practice_incompatibletest>
/ bgstim = (attributeAleft, attributeBright)
/ trials = [1=instructions; 
			2-11 = noreplace(attributeA, attributeA, attributeA, attributeA, attributeA,
							 attributeB, attributeB, attributeB, attributeB, attributeB)]
/ responsemode = correct
</block>

Note: presents the trials in a  7:7:10 ratio => 10 (good) on responsekey_left and 14 (bad + target) on responsekey_right
<block incompatibletest>
/ bgstim = (attributeAleft, targetARightMixed, orright, attributeBright)
/ trials = [1-70 = noreplace(targetAright, targetAright, targetAright, targetAright, targetAright, targetAright, targetAright, targetAright, targetAright, targetAright, 
							 attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA, attributeA,   
							 attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, attributeB, )]
/ ontrialend = [if(block.incompatibletest.latency  <= 10000) values.sum2 =  values.sum2 + block.incompatibletest.latency]
/ ontrialend = [if(block.incompatibletest.latency  <= 10000) values.n2 =  values.n2 + 1]
/ ontrialend = [if(block.incompatibletest.latency  <= 10000) values.ss2 =  values.ss2 + (block.incompatibletest.latency * block.incompatibletest.latency)]
/ ontrialend = [if(block.incompatibletest.latency  <= 10000) values.n_correct += block.incompatibletest.correct]
/ responsemode = correct
</block>

<block compatibletestinstructions>
/ bgstim = (attributeAleft, orleft, targetAleftmixed, attributeBright)
/ trials = [1=instructions]
/ recorddata = false
</block>

<block incompatibletestinstructions>
/ bgstim = (attributeAleft, attributeBright, orright, targetArightmixed)
/ trials = [1=instructions]
/ recorddata = false
</block>

<block summary>
/skip = [values.showsummaryfeedback == false]
/ trials = [1=summary]
/ recorddata = false
</block>

***********************************************************************
Experiment
***********************************************************************

<expt>
/subjects = (1 of 2)
/groupassignment = subjectnumber
/ blocks = [1=practice_compatibletest; 2=compatibletestinstructions; 3=compatibletest;
			4=incompatibletestinstructions; 5=incompatibletest; 6=summary]
/onexptend = [values.completed = 1]
</expt>

<expt>
/subjects = (2 of 2)
/groupassignment = subjectnumber
/ blocks = [1=practice_incompatibletest; 2=incompatibletestinstructions; 3=incompatibletest; 
			4=compatibletestinstructions; 5=compatibletest; 6=summary]
/onexptend = [values.completed = 1]
</expt>

***********************************************************************
Test Monkey
***********************************************************************

<monkey>
/ latencydistribution = normal(500, 100)
/ percentcorrect = 90
</monkey>

