# combine
combined_amp_data <- rbind(amp_data_exp2,
amp_data_exp4) %>%
filter(exclude == FALSE) %>%
mutate(IAT_condition = fct_relevel(as.factor(IAT_condition), "Race IAT", "Flowers-Insects IAT"),
unique_id = as.factor(unique_id),
experiment = as.factor(experiment))
model_amp_meta <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | experiment) + (1 | unique_id),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = combined_amp_data)
AMP_data <-
read.csv("data/processed/processed AMP data - long format.csv") %>%
dplyr::filter(exclude == FALSE,
IAT_exclude_based_on_fast_trials == FALSE) %>%
dplyr::mutate(participant = as.factor(participant),
rating_factor = as.factor(ifelse(accuracy == 0, "negative",
ifelse(accuracy == 1, "positive", NA))),
IAT_condition = as.factor(IAT_condition)) %>%
dplyr::rename(prime_type = item,
rating = accuracy)
model_1 <- glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | participant),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = AMP_data)
View(AMP_data)
sapply(AMP_data, class)
sapply(AMP_data, combined_amp_data)
sapply(combined_amp_data, class)
sapply(AMP_data, class)
sapply(AMP_data, class)
sapply(AMP_data, class)
AMP_data <-
read.csv("data/processed/processed AMP data - long format.csv") %>%
dplyr::filter(exclude == FALSE,
IAT_exclude_based_on_fast_trials == FALSE) %>%
dplyr::mutate(participant = as.factor(participant),
rating_factor = as.factor(ifelse(accuracy == 0, "negative",
ifelse(accuracy == 1, "positive", NA))),
IAT_condition = as.factor(IAT_condition)) %>%
dplyr::rename(prime_type = item,
rating = accuracy)
setwd(params$location_of_exp_2_data)
amp_data_exp2 <-
read.csv("data/processed/processed AMP data - long format.csv") %>%
dplyr::filter(exclude == FALSE,
IAT_exclude_based_on_fast_trials == FALSE) %>%
dplyr::mutate(participant = as.factor(participant),
rating_factor = as.factor(ifelse(accuracy == 0, "negative",
ifelse(accuracy == 1, "positive", NA))),
IAT_condition = as.factor(IAT_condition)) %>%
dplyr::rename(prime_type = item,
rating = accuracy) %>%
dplyr::mutate(experiment = "exp2",
unique_id = paste(experiment, participant, sep = "_")) %>%
dplyr::select(-AMP_exclude_based_on_fast_trials_old)
setwd(params$location_of_exp_4_data)
amp_data_exp4 <-
read.csv("data/processed/processed AMP data - long format.csv") %>%
dplyr::filter(exclude == FALSE,
IAT_exclude_based_on_fast_trials == FALSE) %>%
dplyr::mutate(participant = as.factor(participant),
rating_factor = as.factor(ifelse(accuracy == 0, "negative",
ifelse(accuracy == 1, "positive", NA))),
IAT_condition = as.factor(IAT_condition)) %>%
dplyr::rename(prime_type = item,
rating = accuracy) %>%
dplyr::mutate(experiment = "exp4",
unique_id = paste(experiment, participant, sep = "_"))
# combine
combined_amp_data <- rbind(amp_data_exp2,
amp_data_exp4) %>%
filter(exclude == FALSE) %>%
mutate(IAT_condition = fct_relevel(as.factor(IAT_condition), "Race IAT", "Flowers-Insects IAT"),
unique_id = as.factor(unique_id),
experiment = as.factor(experiment))
model_amp_4 <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | unique_id),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = amp_data_exp4)
amp_data_exp4 <-
read.csv("data/processed/processed AMP data - long format.csv") %>%
dplyr::filter(exclude == FALSE,
IAT_exclude_based_on_fast_trials == FALSE) %>%
dplyr::mutate(participant = as.factor(participant),
rating_factor = as.factor(ifelse(accuracy == 0, "negative",
ifelse(accuracy == 1, "positive", NA))),
IAT_condition = as.factor(IAT_condition)) %>%
dplyr::rename(prime_type = item,
rating = accuracy)
model_amp_4 <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | participant),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = amp_data_exp4)
View(model_amp_4)
View(amp_data_exp4)
amp_data_exp4 <-
read.csv("data/processed/processed AMP data - long format.csv") %>%
dplyr::filter(exclude == FALSE,
IAT_exclude_based_on_fast_trials == FALSE) %>%
dplyr::mutate(participant = as.factor(participant),
rating_factor = as.factor(ifelse(accuracy == 0, "negative",
ifelse(accuracy == 1, "positive", NA))),
IAT_condition = as.factor(IAT_condition)) %>%
dplyr::rename(prime_type = item,
rating = accuracy) %>%
dplyr::mutate(experiment = "exp4",
unique_id = paste(experiment, participant, sep = "_"))
setwd(params$location_of_exp_4_data)
amp_data_exp4 <-
read.csv("data/processed/processed AMP data - long format.csv") %>%
dplyr::filter(exclude == FALSE,
IAT_exclude_based_on_fast_trials == FALSE) %>%
dplyr::mutate(participant = as.factor(participant),
rating_factor = as.factor(ifelse(accuracy == 0, "negative",
ifelse(accuracy == 1, "positive", NA))),
IAT_condition = as.factor(IAT_condition)) %>%
dplyr::rename(prime_type = item,
rating = accuracy) %>%
dplyr::mutate(experiment = "exp4",
unique_id = as.factor(paste(experiment, participant, sep = "_")))
View(amp_data_exp4)
model_amp_4 <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | unique_id),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = amp_data_exp4)
count(model_amp_4, participant, unique_id)
count(amp_data_exp4, participant, unique_id)
count(amp_data_exp4, participant, unique_id) %>%
count()
count(amp_data_exp4, participant, unique_id) %>%
count(n)
model_amp_4_alt <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | participant),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = amp_data_exp4)
model_amp_4 <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | unique_id),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = amp_data_exp4)
setwd(params$location_of_exp_4_data)
amp_data_exp4 <-
read.csv("data/processed/processed AMP data - long format.csv") %>%
dplyr::filter(exclude == FALSE,
IAT_exclude_based_on_fast_trials == FALSE) %>%
dplyr::mutate(participant = as.factor(participant),
rating_factor = as.factor(ifelse(accuracy == 0, "negative",
ifelse(accuracy == 1, "positive", NA))),
IAT_condition = as.factor(IAT_condition)) %>%
dplyr::rename(prime_type = item,
rating = accuracy) %>%
dplyr::mutate(experiment = "exp4",
unique_participant_id = as.factor(paste(experiment, participant, sep = "_")))
model_amp_4 <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | unique_participant_id),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = amp_data_exp4)
summary(model_amp_4)
summary(model_amp_4_alt)
model_amp_4 <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | unique_participant_id),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = amp_data_exp4)
summary(model_amp_4)
model_amp_4_alt <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | participant),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = amp_data_exp4)
summary(model_amp_4_alt)
model_amp_4_alt <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | participant),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
control = glmerControl(optCtrl = list(maxfun = 2e4)),
data = amp_data_exp4)
model_amp_4 <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | unique_participant_id),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
control = glmerControl(optCtrl = list(maxfun = 2e4)),
data = amp_data_exp4)
amp_data_exp4 <-
read.csv("data/processed/processed AMP data - long format.csv") %>%
dplyr::filter(exclude == FALSE,
IAT_exclude_based_on_fast_trials == FALSE) %>%
dplyr::mutate(participant = as.factor(participant),
rating_factor = as.factor(ifelse(accuracy == 0, "negative",
ifelse(accuracy == 1, "positive", NA))),
IAT_condition = as.factor(IAT_condition)) %>%
dplyr::rename(prime_type = item,
rating = accuracy) %>%
dplyr::mutate(experiment = "exp4",
unique_participant_id = participant)
setwd(params$location_of_exp_4_data)
amp_data_exp4 <-
read.csv("data/processed/processed AMP data - long format.csv") %>%
dplyr::filter(exclude == FALSE,
IAT_exclude_based_on_fast_trials == FALSE) %>%
dplyr::mutate(participant = as.factor(participant),
rating_factor = as.factor(ifelse(accuracy == 0, "negative",
ifelse(accuracy == 1, "positive", NA))),
IAT_condition = as.factor(IAT_condition)) %>%
dplyr::rename(prime_type = item,
rating = accuracy) %>%
dplyr::mutate(experiment = "exp4",
unique_participant_id = participant)
model_amp_4 <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | unique_participant_id),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
control = glmerControl(optCtrl = list(maxfun = 2e4)),
data = amp_data_exp4)
amp_data_exp4 <-
read.csv("data/processed/processed AMP data - long format.csv") %>%
dplyr::filter(exclude == FALSE,
IAT_exclude_based_on_fast_trials == FALSE) %>%
dplyr::mutate(participant = as.factor(participant),
rating_factor = as.factor(ifelse(accuracy == 0, "negative",
ifelse(accuracy == 1, "positive", NA))),
IAT_condition = as.factor(IAT_condition)) %>%
dplyr::rename(prime_type = item,
rating = accuracy) %>%
dplyr::mutate(experiment = "exp4",
#unique_participant_id = participant)
unique_participant_id = as.factor(paste(experiment, as.character(participant), sep = "")))
model_amp_4 <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | unique_participant_id),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = amp_data_exp4)
amp_data_exp4 <-
read.csv("data/processed/processed AMP data - long format.csv") %>%
dplyr::filter(exclude == FALSE,
IAT_exclude_based_on_fast_trials == FALSE) %>%
dplyr::mutate(participant = as.factor(participant),
rating_factor = as.factor(ifelse(accuracy == 0, "negative",
ifelse(accuracy == 1, "positive", NA))),
IAT_condition = as.factor(IAT_condition)) %>%
dplyr::rename(prime_type = item,
rating = accuracy) %>%
dplyr::mutate(experiment = "exp4",
unique_participant_id = as.factor(paste(experiment, participant, sep = "")))
# get data from exp 2
setwd(params$location_of_exp_2_data)
amp_data_exp2 <-
read.csv("data/processed/processed AMP data - long format.csv") %>%
dplyr::filter(exclude == FALSE,
IAT_exclude_based_on_fast_trials == FALSE) %>%
dplyr::mutate(participant = as.factor(participant),
rating_factor = as.factor(ifelse(accuracy == 0, "negative",
ifelse(accuracy == 1, "positive", NA))),
IAT_condition = as.factor(IAT_condition)) %>%
dplyr::rename(prime_type = item,
rating = accuracy) %>%
dplyr::mutate(experiment = "exp2",
unique_id = as.factor(paste(experiment, participant, sep = "_")))
dplyr::select(-AMP_exclude_based_on_fast_trials_old)
# get data from exp 2
setwd(params$location_of_exp_2_data)
amp_data_exp2 <-
read.csv("data/processed/processed AMP data - long format.csv") %>%
dplyr::filter(exclude == FALSE,
IAT_exclude_based_on_fast_trials == FALSE) %>%
dplyr::mutate(participant = as.factor(participant),
rating_factor = as.factor(ifelse(accuracy == 0, "negative",
ifelse(accuracy == 1, "positive", NA))),
IAT_condition = as.factor(IAT_condition)) %>%
dplyr::rename(prime_type = item,
rating = accuracy) %>%
dplyr::mutate(experiment = "exp2",
unique_id = as.factor(paste(experiment, participant, sep = "_"))) %>%
dplyr::select(-AMP_exclude_based_on_fast_trials_old)
# get data from exp 4
setwd(params$location_of_exp_4_data)
amp_data_exp4 <-
read.csv("data/processed/processed AMP data - long format.csv") %>%
dplyr::filter(exclude == FALSE,
IAT_exclude_based_on_fast_trials == FALSE) %>%
dplyr::mutate(participant = as.factor(participant),
rating_factor = as.factor(ifelse(accuracy == 0, "negative",
ifelse(accuracy == 1, "positive", NA))),
IAT_condition = as.factor(IAT_condition)) %>%
dplyr::rename(prime_type = item,
rating = accuracy) %>%
dplyr::mutate(experiment = "exp4",
unique_id = as.factor(paste(experiment, participant, sep = "_")))
# combine
combined_amp_data <- rbind(amp_data_exp2,
amp_data_exp4) %>%
filter(exclude == FALSE) %>%
mutate(IAT_condition = fct_relevel(as.factor(IAT_condition), "Race IAT", "Flowers-Insects IAT"),
unique_id = as.factor(unique_id),
experiment = as.factor(experiment))
# all of the following throw convergence issue warnings, despite the fact that identical models in the separate experiments do not. I consulted the convergence issue page (https://rstudio-pubs-static.s3.amazonaws.com/33653_57fc7b8e5d484c909b615d8633c01d51.html) but this didn't shed any light on the issue. experimentaation showed that changing "unique_id" to "participant" resolves the issue, even though checking shows that the two are identical, i.e., both factors with the same unique values and N rows each. Experimenting with how unique_id is calculated (e.g., special characters or not, factor or character, etc) does not resolve the issue. When I compared the summary() output of two models using participant (with no convergence issues) vs unique_id (with convergence issues) there were no substantive differences in their results. As such, I'll proceed to use the model despite the supposed convergence issue.
model_amp_meta <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | experiment) + (1 | unique_id),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = combined_amp_data)
model_amp_2 <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | unique_id),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = amp_data_exp2)
model_amp_4 <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | unique_id),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = amp_data_exp4)
summary(model_amp_4)
sjt.lmer(model_amp_meta,
emph.p = FALSE,
p.kr = FALSE,
show.std = TRUE)
sjp.lmer(model_amp_meta,
p.kr = FALSE,
type = "fe")
sjt.lmer(model_amp_meta)
# n per condition per study
amp_2_n <- amp_data_exp2 %>%
count(IAT_condition) %>%
spread(IAT_condition, n) %>%
mutate(experiment = "Experiment 2")
amp_4_n <- amp_data_exp4 %>%
count(IAT_condition) %>%
spread(IAT_condition, n) %>%
mutate(experiment = "Experiment 4")
amp_n <- rbind(amp_2_n, amp_4_n) %>%
gather(IAT_condition, n, c("Race IAT", "Flowers-Insects IAT")) %>%
mutate(percent_n = round(n/sum(n), 3)) %>%
arrange(experiment)
# predicted effects
model_amp_meta_predicted_effects <- as.data.frame(effect("prime_type:IAT_condition", model_amp_meta)) %>%
mutate(experiment = "Meta-analysis")
model_amp_2_predicted_effects <- as.data.frame(effect("prime_type:IAT_condition", model_amp_2)) %>%
mutate(experiment = "Experiment 2")
model_amp_4_predicted_effects <- as.data.frame(effect("prime_type:IAT_condition", model_amp_4)) %>%
mutate(experiment = "Experiment 4")
# combine
model_predicted_effects_amp <- rbind(model_amp_2_predicted_effects,
model_amp_4_predicted_effects,
model_amp_meta_predicted_effects) %>%
left_join(amp_n, by = c("experiment", "IAT_condition")) %>%
mutate(percent_n = ifelse(is.na(percent_n), 1, percent_n)) %>%  # needs thought
mutate(experiment = fct_relevel(experiment,
"Meta-analysis",
"Experiment 4",
"Experiment 2"))
model_predicted_effects_amp %>%
round_df(2) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
ggplot(data = model_predicted_effects_amp,
aes(x = experiment, color = IAT_condition)) +
geom_point(aes(y = fit,
size = percent_n),
position = position_dodge(width=0.75),
shape = 15,
show.legend = FALSE) +
geom_linerange(aes(ymax = upper,
ymin = lower),
position = position_dodge(width=0.75)) +
ylab("Rating") +
xlab("") +
scale_colour_grey() +
theme_classic() +
#ylim(3.8, 4.9) +
coord_flip() +
facet_wrap(~prime_type)
# all of the following throw convergence issue warnings, despite the fact that identical models in the separate experiments do not. I consulted the convergence issue page (https://rstudio-pubs-static.s3.amazonaws.com/33653_57fc7b8e5d484c909b615d8633c01d51.html) but this didn't shed any light on the issue. experimentaation showed that changing "unique_id" to "participant" resolves the issue, even though checking shows that the two are identical, i.e., both factors with the same unique values and N rows each. Experimenting with how unique_id is calculated (e.g., special characters or not, factor or character, etc) does not resolve the issue. When I compared the summary() output of two models using participant (with no convergence issues) vs unique_id (with convergence issues) there were no substantive differences in their results. As such, I'll proceed to use the model despite the supposed convergence issue.
model_amp_meta <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | experiment) + (1 | participant),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = combined_amp_data)
model_amp_2 <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | participant),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = amp_data_exp2)
model_amp_4 <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | participant),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = amp_data_exp4)
sjt.lmer(model_amp_meta,
emph.p = FALSE,
p.kr = FALSE,
show.std = TRUE)
model_amp_meta
model_amp_meta <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | experiment) + (1 | participant),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
control = glmerControl(optimizer = "bobyqa",           # alt optimizer
optCtrl = list(maxfun = 2e5)),  # increased iterations
data = combined_amp_data)
sjt.lmer(model_amp_meta,
emph.p = FALSE,
p.kr = FALSE,
show.std = TRUE)
model_amp_meta
summary(model_amp_meta)
sjp.lmer(model_amp_meta,
p.kr = FALSE,
type = "fe")
# n per condition per study
amp_2_n <- amp_data_exp2 %>%
count(IAT_condition) %>%
spread(IAT_condition, n) %>%
mutate(experiment = "Experiment 2")
amp_4_n <- amp_data_exp4 %>%
count(IAT_condition) %>%
spread(IAT_condition, n) %>%
mutate(experiment = "Experiment 4")
amp_n <- rbind(amp_2_n, amp_4_n) %>%
gather(IAT_condition, n, c("Race IAT", "Flowers-Insects IAT")) %>%
mutate(percent_n = round(n/sum(n), 3)) %>%
arrange(experiment)
# predicted effects
model_amp_meta_predicted_effects <- as.data.frame(effect("prime_type:IAT_condition", model_amp_meta)) %>%
mutate(experiment = "Meta-analysis")
model_amp_2_predicted_effects <- as.data.frame(effect("prime_type:IAT_condition", model_amp_2)) %>%
mutate(experiment = "Experiment 2")
model_amp_4_predicted_effects <- as.data.frame(effect("prime_type:IAT_condition", model_amp_4)) %>%
mutate(experiment = "Experiment 4")
# combine
model_predicted_effects_amp <- rbind(model_amp_2_predicted_effects,
model_amp_4_predicted_effects,
model_amp_meta_predicted_effects) %>%
left_join(amp_n, by = c("experiment", "IAT_condition")) %>%
mutate(percent_n = ifelse(is.na(percent_n), 1, percent_n)) %>%  # needs thought
mutate(experiment = fct_relevel(experiment,
"Meta-analysis",
"Experiment 4",
"Experiment 2"))
model_predicted_effects_amp %>%
round_df(2) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
ggplot(data = model_predicted_effects_amp,
aes(x = experiment, color = IAT_condition)) +
geom_point(aes(y = fit,
size = percent_n),
position = position_dodge(width=0.75),
shape = 15,
show.legend = FALSE) +
geom_linerange(aes(ymax = upper,
ymin = lower),
position = position_dodge(width=0.75)) +
ylab("Rating") +
xlab("") +
scale_colour_grey() +
theme_classic() +
#ylim(3.8, 4.9) +
coord_flip() +
facet_wrap(~prime_type)
model_amp_2 <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | participant),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = amp_data_exp2)
sjt.lmer(model_amp_2,
emph.p = FALSE,
p.kr = FALSE,
show.std = TRUE)
sjt.lmer(model_amp_4,
emph.p = FALSE,
p.kr = FALSE,
show.std = TRUE)
model_amp_4 <-
glmer(rating ~ prime_type * IAT_condition + modern_racism_scale_total + (1 | participant),
family = "binomial",
contrasts = list(prime_type = "contr.sum",
IAT_condition = "contr.sum"),
data = amp_data_exp4)
sjt.lmer(model_amp_4,
emph.p = FALSE,
p.kr = FALSE,
show.std = TRUE)
sjt.lmer(model_amp_4)
